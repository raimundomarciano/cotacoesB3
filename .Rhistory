ct = lerCotacoesB3(1986)
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
lerCotacoesB3 <- function(dt, out = "./Downloads", per = "anual"){
#' Cotações da bolsa de valores brasileira - B3 SA
#'
#' Faz o download das cotações referentes a um ou mais dias. Usa o FTP da B3.
#' Dados anuais (per = "anual") estão disponíveis desde 1986
#' A partir de 2014, também há dados diários (usar per = "2016")
#' Observar que as ações são negociadas apenas em dias úteis. Para gerar
#' um calendário de dias úteis, pode ser usada a função calendarioBR.
#' @param dt Data. Informar um dia útil na forma "AAAA-MM-DD".
#' @param dt Ano. Informar um ano na forma AAAA. Aspas opcionais.
#' @param out Pasta onde os arquivos baixados serão salvos. Não incluir uma "/" ao final.
#' @param per Periodicidade. Pode ser informado "anual" ou "diario".
#' @examples
#' lerCotacoesB3("2019", per = "anual")
#' lerCotacoesB3("2020-07-10", per = "diario")
if (per == 'anual'){
dt <- as.character(dt)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
txtExists <- paste0('COTAHIST_A',dt,'.TXT') %in% fileList
oldExists <- paste0('COTAHIST.A',dt) %in% fileList
}
if (per == 'diario'){
url <- format(as.Date(dt, format = "%Y-%m-%d"),
"http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_D%d%m%Y.ZIP")
filename <- paste0(out, '/COTAHIST_D', filename,'.ZIP')
dtFormatted <- format(as.Date(dt, format = "%Y-%m-%d"), "%d%m%Y")
zipExists <- paste0('COTAHIST_D',dtFormatted,'.ZIP') %in% fileList
txtExists <- paste0('COTAHIST_D',dtFormatted,'.TXT') %in% fileList
oldExists <- FALSE
}
if (!(zipExists | txtExists | oldExists)){
download.file(url = url, destfile = filename, mode = "wb")
files <- unzip(zipfile = filename, exdir = out)
} else if (zipExists & !txtExists & !oldExists){
files <- unzip(zipfile = filename, exdir = out)
} else if (txtExists) {
if (per == "anual"){ files <- files <- paste0(out, '/COTAHIST_A',dt,'.TXT') }
if (per == "diario") {files <- paste0(out, '/COTAHIST_D',dtFormatted,'.TXT') }
} else if (per == "anual" & oldExists){
files <- paste0(out, '/COSTHIST.A', dt)
} else {
print("Formato não reconhecido. Por favor, reportar o erro.")
return
}
layoutCotacoes <- read.csv2("layoutCotacoesHistoricas.csv", stringsAsFactors = FALSE)
cotacao <- read.fwf(file = files, widths = layoutCotacoes$tamanho,
col.names = layoutCotacoes$campo, stringsAsFactors = FALSE,
strip.white = TRUE, skip = 1)
cotacao <- cotacao[-nrow(cotacao),]
cotacao$dtPregao <- as.Date(cotacao$dtPregao, "%Y%m%d")
cotacao$dtVencimento <- as.Date(as.character(cotacao$dtVencimento), "%Y%m%d")
cols = c("precoAbertura","precoMax","precoMinimo",
"precoMedio","precoUltimo", "precoOFC",
"precoOFV")
for (coluna in cols){
cotacao[,coluna] <- cotacao[,coluna] / 100
}
return(cotacao)
}
ct = lerCotacoesB3(1986)
ct = lerCotacoesB3(1986)
ct = lerCotacoesB3(1986)
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
lerCotacoesB3 <- function(dt, out = "./Downloads", per = "anual"){
#' Cotações da bolsa de valores brasileira - B3 SA
#'
#' Faz o download das cotações referentes a um ou mais dias. Usa o FTP da B3.
#' Dados anuais (per = "anual") estão disponíveis desde 1986
#' A partir de 2014, também há dados diários (usar per = "2016")
#' Observar que as ações são negociadas apenas em dias úteis. Para gerar
#' um calendário de dias úteis, pode ser usada a função calendarioBR.
#' @param dt Data. Informar um dia útil na forma "AAAA-MM-DD".
#' @param dt Ano. Informar um ano na forma AAAA. Aspas opcionais.
#' @param out Pasta onde os arquivos baixados serão salvos. Não incluir uma "/" ao final.
#' @param per Periodicidade. Pode ser informado "anual" ou "diario".
#' @examples
#' lerCotacoesB3("2019", per = "anual")
#' lerCotacoesB3("2020-07-10", per = "diario")
if (per == 'anual'){
dt <- as.character(dt)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
txtExists <- paste0('COTAHIST_A',dt,'.TXT') %in% fileList
oldExists <- paste0('COTAHIST.A',dt) %in% fileList
}
if (per == 'diario'){
url <- format(as.Date(dt, format = "%Y-%m-%d"),
"http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_D%d%m%Y.ZIP")
filename <- paste0(out, '/COTAHIST_D', filename,'.ZIP')
dtFormatted <- format(as.Date(dt, format = "%Y-%m-%d"), "%d%m%Y")
zipExists <- paste0('COTAHIST_D',dtFormatted,'.ZIP') %in% fileList
txtExists <- paste0('COTAHIST_D',dtFormatted,'.TXT') %in% fileList
oldExists <- FALSE
}
if (!(zipExists | txtExists | oldExists)){
download.file(url = url, destfile = filename, mode = "wb")
files <- unzip(zipfile = filename, exdir = out)
} else if (zipExists & !txtExists & !oldExists){
files <- unzip(zipfile = filename, exdir = out)
} else if (txtExists) {
if (per == "anual"){ files <- files <- paste0(out, '/COTAHIST_A', dt,'.TXT') }
if (per == "diario") {files <- paste0(out, '/COTAHIST_D', dtFormatted,'.TXT') }
} else if (per == "anual" & oldExists){
files <- paste0(out, '/COTAHIST.A', dt)
} else {
print("Formato não reconhecido. Por favor, reportar o erro.")
return
}
layoutCotacoes <- read.csv2("layoutCotacoesHistoricas.csv", stringsAsFactors = FALSE)
cotacao <- read.fwf(file = files, widths = layoutCotacoes$tamanho,
col.names = layoutCotacoes$campo, stringsAsFactors = FALSE,
strip.white = TRUE, skip = 1)
cotacao <- cotacao[-nrow(cotacao),]
cotacao$dtPregao <- as.Date(cotacao$dtPregao, "%Y%m%d")
cotacao$dtVencimento <- as.Date(as.character(cotacao$dtVencimento), "%Y%m%d")
cols = c("precoAbertura","precoMax","precoMinimo",
"precoMedio","precoUltimo", "precoOFC",
"precoOFV")
for (coluna in cols){
cotacao[,coluna] <- cotacao[,coluna] / 100
}
return(cotacao)
}
ct = lerCotacoesB3(1986)
View(ct)
baixarZipsB3 <- function(ano, out = "./Downloads"){
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
}
baixarZipsB3(1986)
baixarZipsB3 <- function(ano, out = "./Downloads"){
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, 'já foram baixadas anteriormente.'))
}
}
baixarZipsB3(1986)
baixarZipsB3 <- function(ano, out = "./Downloads"){
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
}
baixarZipsB3(1987)
baixarZipsB3(1988)
baixarZipsB3(1989)
for(i in 1990:1999){baixarZipsB3(i)}
for(i in 1990:1999){baixarZipsB3(i)}
cd = "./Downloads/COTAHIST_A1991.ZIP"
files <- unzip(zipfile = cd, exdir = './Downloads')
length(files)
?unzip
baixarZipsB3 <- function(ano, out = "./Downloads", integrity = TRUE){
#' Download dos zips com as cotações diárias de um ano.
#'
#' Faz o download dos arquivos zip, sem processá-los. Para extrair e carregar o conteúdo
#' para o R, use a função lerCotacoesB3. O FTP da B3 inclui cotações a partir de 1986.
#' Este pacote ainda não inclui um teste de integridade. É provável que arquivos com menos de 5mb não
#' foram baixados corretamente.
#'
#' @param ano Um inteiro representando o ano.
#' @param out o caminho onde serão baixados os arquivos
#'
#' @examples
#' baixarZipsB3(2018)
#' for (ano in 1990:1999) { baixarZipsB3(ano) }
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
if(integrity == TRUE){
outzip <- paste0(out, '/COTAHIST_A', ano, '.ZIP')
works <- unzip(zipfile = outzip, exdir = out)
if (length(works) == 0){
print(paste0('Arquivo referente ao ano ', ano,
'está corrompido. Baixe novamente.'))
} else {
fileTXT <- paste0('/COTAHIST_A', ano, '.TXT')
fileOLD <- paste0('/COTAHIST.A', ano)
if (file.exists(fileTXT)) {
file.remove(fileTXT)
print(paste0('Arquivo', fileTXT, 'removido.'))
}
if (file.exists(fileOLD)) {
file.remove(fileoLD)
print(paste0('Arquivo', fileOLD, 'removido.'))
}
}
}
}
baixarZipsB3(1986, integrity = TRUE)
fileOLD <- paste0('/COTAHIST.A', ano)
baixarZipsB3 <- function(ano, out = "./Downloads", integrity = TRUE){
#' Download dos zips com as cotações diárias de um ano.
#'
#' Faz o download dos arquivos zip, sem processá-los. Para extrair e carregar o conteúdo
#' para o R, use a função lerCotacoesB3. O FTP da B3 inclui cotações a partir de 1986.
#' Este pacote ainda não inclui um teste de integridade. É provável que arquivos com menos de 5mb não
#' foram baixados corretamente.
#'
#' @param ano Um inteiro representando o ano.
#' @param out o caminho onde serão baixados os arquivos
#'
#' @examples
#' baixarZipsB3(2018)
#' for (ano in 1990:1999) { baixarZipsB3(ano) }
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
if(integrity == TRUE){
outzip <- paste0(out, '/COTAHIST_A', ano, '.ZIP')
works <- unzip(zipfile = outzip, exdir = out)
if (length(works) == 0){
print(paste0('Arquivo referente ao ano ', ano,
'está corrompido. Baixe novamente.'))
} else {
fileTXT <- paste0(out, '/COTAHIST_A', ano, '.TXT')
fileOLD <- paste0(out, '/COTAHIST.A', ano)
if (file.exists(fileTXT)) {
file.remove(fileTXT)
print(paste0('Arquivo', fileTXT, 'removido.'))
}
if (file.exists(fileOLD)) {
file.remove(fileoLD)
print(paste0('Arquivo', fileOLD, 'removido.'))
}
}
}
}
baixarZipsB3(1986, integrity = TRUE)
baixarZipsB3 <- function(ano, out = "./Downloads", integrity = TRUE){
#' Download dos zips com as cotações diárias de um ano.
#'
#' Faz o download dos arquivos zip, sem processá-los. Para extrair e carregar o conteúdo
#' para o R, use a função lerCotacoesB3. O FTP da B3 inclui cotações a partir de 1986.
#' Este pacote ainda não inclui um teste de integridade. É provável que arquivos com menos de 5mb não
#' foram baixados corretamente.
#'
#' @param ano Um inteiro representando o ano.
#' @param out o caminho onde serão baixados os arquivos
#'
#' @examples
#' baixarZipsB3(2018)
#' for (ano in 1990:1999) { baixarZipsB3(ano) }
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
if(integrity == TRUE){
outzip <- paste0(out, '/COTAHIST_A', ano, '.ZIP')
works <- unzip(zipfile = outzip, exdir = out)
if (length(works) == 0){
print(paste0('Arquivo referente ao ano ', ano,
'está corrompido. Baixe novamente.'))
} else {
fileTXT <- paste0(out, '/COTAHIST_A', ano, '.TXT')
fileOLD <- paste0(out, '/COTAHIST.A', ano)
if (file.exists(fileTXT)) {
file.remove(fileTXT)
print(paste0('Arquivo', fileTXT, 'removido.'))
}
if (file.exists(fileOLD)) {
file.remove(fileOLD)
print(paste0('Arquivo', fileOLD, 'removido.'))
}
}
}
}
baixarZipsB3(1986, integrity = TRUE)
baixarZipsB3(1986, integrity = TRUE)
baixarZipsB3(1991, integrity = TRUE)
baixarZipsB3(1991, integrity = TRUE)
baixarZipsB3 <- function(ano, out = "./Downloads", integrity = TRUE){
#' Download dos zips com as cotações diárias de um ano.
#'
#' Faz o download dos arquivos zip, sem processá-los. Para extrair e carregar o conteúdo
#' para o R, use a função lerCotacoesB3. O FTP da B3 inclui cotações a partir de 1986.
#' Este pacote ainda não inclui um teste de integridade. É provável que arquivos com menos de 5mb não
#' foram baixados corretamente.
#'
#' @param ano Um inteiro representando o ano.
#' @param out o caminho onde serão baixados os arquivos
#'
#' @examples
#' baixarZipsB3(2018)
#' for (ano in 1990:1999) { baixarZipsB3(ano) }
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
if(integrity == TRUE){
outzip <- paste0(out, '/COTAHIST_A', ano, '.ZIP')
works <- unzip(zipfile = outzip, exdir = out)
if (length(works) == 0){
print(paste0('Arquivo referente ao ano ', ano,
' está corrompido. Baixe novamente.'))
} else {
fileTXT <- paste0(out, '/COTAHIST_A', ano, '.TXT')
fileOLD <- paste0(out, '/COTAHIST.A', ano)
if (file.exists(fileTXT)) {
file.remove(fileTXT)
#print(paste0('Arquivo', fileTXT, ' removido.'))
}
if (file.exists(fileOLD)) {
file.remove(fileOLD)
#print(paste0('Arquivo', fileOLD, ' removido.'))
}
}
}
}
baixarZipsB3(1991, integrity = TRUE)
baixarZipsB3(1991, integrity = TRUE)
baixarZipsB3 <- function(ano, out = "./Downloads", integrity = TRUE){
#' Download dos zips com as cotações diárias de um ano.
#'
#' Faz o download dos arquivos zip, sem processá-los. Para extrair e carregar o conteúdo
#' para o R, use a função lerCotacoesB3. O FTP da B3 inclui cotações a partir de 1986.
#' Este pacote ainda não inclui um teste de integridade. É provável que arquivos com menos de 5mb não
#' foram baixados corretamente.
#'
#' @param ano Um inteiro representando o ano.
#' @param out o caminho onde serão baixados os arquivos
#'
#' @examples
#' baixarZipsB3(2018)
#' for (ano in 1990:1999) { baixarZipsB3(ano) }
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
if(integrity == TRUE){
outzip <- paste0(out, '/COTAHIST_A', ano, '.ZIP')
works <- unzip(zipfile = outzip, exdir = out)
if (length(works) == 0){
print(paste0('Arquivo referente ao ano ', ano,
' está corrompido. Delete e baixe novamente.'))
} else {
fileTXT <- paste0(out, '/COTAHIST_A', ano, '.TXT')
fileOLD <- paste0(out, '/COTAHIST.A', ano)
if (file.exists(fileTXT)) {
file.remove(fileTXT)
#print(paste0('Arquivo', fileTXT, ' removido.'))
}
if (file.exists(fileOLD)) {
file.remove(fileOLD)
#print(paste0('Arquivo', fileOLD, ' removido.'))
}
}
}
}
baixarZipsB3(1991, integrity = TRUE)
devtools::document()
library(cotacoesB3)
library(cotacoesB3)
devtools::document()
for (ano in 1990:1999) { baixarZipsB3(ano) }
baixarZipsB3 <- function(ano, out = "./Downloads", integrity = TRUE){
#' Download dos zips com as cotações diárias de um ano.
#'
#' Faz o download dos arquivos zip, sem processá-los. Para extrair e carregar o conteúdo
#' para o R, use a função lerCotacoesB3. O FTP da B3 inclui cotações a partir de 1986.
#' Este pacote ainda não inclui um teste de integridade. É provável que arquivos com menos de 5mb não
#' foram baixados corretamente.
#'
#' @param ano Um inteiro representando o ano.
#' @param out o caminho onde serão baixados os arquivos
#'
#' @examples
#' baixarZipsB3(2018)
#' for (ano in 1990:1999) { baixarZipsB3(ano) }
dt <- as.character(ano)
fileList <- list.files(out)
url <- paste0('http://bvmf.bmfbovespa.com.br/InstDados/SerHist/COTAHIST_A',
dt,'.ZIP')
filename <- paste0(out,'/COTAHIST_A',dt,'.ZIP')
zipExists <- paste0('COTAHIST_A',dt,'.ZIP') %in% fileList
if (!zipExists){
download.file(url = url, destfile = filename, mode = "wb")
}
if (zipExists){
print(paste0('Cotações do ano ', ano, ' já foram baixadas anteriormente.'))
}
if(integrity == TRUE){
outzip <- paste0(out, '/COTAHIST_A', ano, '.ZIP')
works <- unzip(zipfile = outzip, exdir = out)
if (length(works) == 0){
print(paste0('Arquivo referente ao ano ', ano,
' está corrompido. Delete e baixe novamente.'))
} else {
fileTXT <- paste0(out, '/COTAHIST_A', ano, '.TXT')
fileOLD <- paste0(out, '/COTAHIST.A', ano)
if (file.exists(fileTXT)) {
file.remove(fileTXT)
#print(paste0('Arquivo', fileTXT, ' removido.'))
}
if (file.exists(fileOLD)) {
file.remove(fileOLD)
#print(paste0('Arquivo', fileOLD, ' removido.'))
}
}
}
}
for (ano in 1990:1999) { baixarZipsB3(ano) }
for (ano in 1990:1999) { baixarZipsB3(ano) }
for (ano in 2000:2016) { baixarZipsB3(ano) }
for (ano in 2000:2016) { baixarZipsB3(ano) }
library(cotacoesB3)
library(cotacoesB3)
devtools::document()
devtools::document()
library(cotacoesB3)
llsf.str("package:cotacoesB")
llsf.str("package:cotacoesB3")
lsf.str("package:cotacoesB3")
devtools::document()
library(cotacoesB3)
devtools::document()
devtools::document()
library(cotacoesB3)
search()
lsf.str("package:cotacoesB3")
baixarZipsB3(2010)
calendarioBR("2020-01-01", "2020-05-01")
devtools::document()
library(cotacoesB3)
library(cotacoesB3)
calendarioBR("2020-01-01", "2020-01-10")
library(cotacoesB3)
calendarioBR("2020-01-01", "2020-01-10")
library(cotacoesB3)
calendarioBR("2020-01-01", "2020-01-10")
baixarZipsB3(2018)
devtools::document()
library(cotacoesB3)
library(cotacoesB3)
